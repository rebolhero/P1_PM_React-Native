{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ModalExample = function (_Component) {\n  _inherits(ModalExample, _Component);\n\n  var _super = _createSuper(ModalExample);\n\n  function ModalExample() {\n    var _this;\n\n    _classCallCheck(this, ModalExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalExample, [{\n    key: \"toggleModal\",\n    value: function toggleModal(visible) {\n      this.setState({\n        modalVisible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          transparent: false,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            console.log(\"Modal has been closed.\");\n          },\n          children: _jsxs(View, {\n            style: styles.modal,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: \"Modal is open!\"\n            }), _jsx(TouchableHighlight, {\n              onPress: function onPress() {\n                _this2.toggleModal(!_this2.state.modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Close Modal\"\n              })\n            })]\n          })\n        }), _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            _this2.toggleModal(true);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Open Modal\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ModalExample;\n}(Component);\n\nexport default ModalExample;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#ede3f2',\n    padding: 100\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#FFF',\n    height: 300,\n    padding: 100\n  },\n  text: {\n    color: '#3f2949',\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/maria/Desktop/Fatec/Programacao Mobile/P1_PM_React-Native/ToDoList/src/screens/components/novo.js"],"names":["React","Component","ModalExample","state","modalVisible","visible","setState","styles","container","console","log","modal","text","toggleModal","StyleSheet","create","alignItems","backgroundColor","padding","flex","height","color","marginTop"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;IAIMC,Y;;;;;;;;;;;;;;;UACHC,K,GAAQ;AACLC,MAAAA,YAAY,EAAE;AADT,K;;;;;;WAGR,qBAAYC,OAAZ,EAAqB;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAEC;AAAhB,OAAd;AACF;;;WACD,kBAAS;AAAA;;AACN,aACG,MAAC,IAAD;AAAM,QAAA,KAAK,EAAIE,MAAM,CAACC,SAAtB;AAAA,mBACG,KAAC,KAAD;AAAO,UAAA,aAAa,EAAI,OAAxB;AAAiC,UAAA,WAAW,EAAI,KAAhD;AACG,UAAA,OAAO,EAAI,KAAKL,KAAL,CAAWC,YADzB;AAEG,UAAA,cAAc,EAAI,0BAAM;AAAEK,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAAuC,WAFpE;AAAA,oBAIG,MAAC,IAAD;AAAM,YAAA,KAAK,EAAIH,MAAM,CAACI,KAAtB;AAAA,uBACG,KAAC,IAAD;AAAM,cAAA,KAAK,EAAIJ,MAAM,CAACK,IAAtB;AAAA;AAAA,cADH,EAGG,KAAC,kBAAD;AAAoB,cAAA,OAAO,EAAI,mBAAM;AAClC,gBAAA,MAAI,CAACC,WAAL,CAAiB,CAAC,MAAI,CAACV,KAAL,CAAWC,YAA7B;AAA2C,eAD9C;AAAA,wBAGG,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAIG,MAAM,CAACK,IAAtB;AAAA;AAAA;AAHH,cAHH;AAAA;AAJH,UADH,EAgBG,KAAC,kBAAD;AAAoB,UAAA,OAAO,EAAI,mBAAM;AAAC,YAAA,MAAI,CAACC,WAAL,CAAiB,IAAjB;AAAuB,WAA7D;AAAA,oBACG,KAAC,IAAD;AAAM,YAAA,KAAK,EAAIN,MAAM,CAACK,IAAtB;AAAA;AAAA;AADH,UAhBH;AAAA,QADH;AAsBF;;;;EA9BuBX,S;;AAgC3B,eAAeC,YAAf;AAEA,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAmB;AAC/BP,EAAAA,SAAS,EAAE;AACRQ,IAAAA,UAAU,EAAE,QADJ;AAERC,IAAAA,eAAe,EAAE,SAFT;AAGRC,IAAAA,OAAO,EAAE;AAHD,GADoB;AAM/BP,EAAAA,KAAK,EAAE;AACJQ,IAAAA,IAAI,EAAE,CADF;AAEJH,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,eAAe,EAAE,MAHb;AAIJG,IAAAA,MAAM,EAAE,GAJJ;AAKJF,IAAAA,OAAO,EAAE;AALL,GANwB;AAa/BN,EAAAA,IAAI,EAAE;AACHS,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,SAAS,EAAE;AAFR;AAbyB,CAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Text, TouchableHighlight, View, StyleSheet}\r\n\r\nfrom 'react-native'\r\nclass ModalExample extends Component {\r\n   state = {\r\n      modalVisible: false,\r\n   }\r\n   toggleModal(visible) {\r\n      this.setState({ modalVisible: visible });\r\n   }\r\n   render() {\r\n      return (\r\n         <View style = {styles.container}>\r\n            <Modal animationType = {\"slide\"} transparent = {false}\r\n               visible = {this.state.modalVisible}\r\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\r\n               \r\n               <View style = {styles.modal}>\r\n                  <Text style = {styles.text}>Modal is open!</Text>\r\n                  \r\n                  <TouchableHighlight onPress = {() => {\r\n                     this.toggleModal(!this.state.modalVisible)}}>\r\n                     \r\n                     <Text style = {styles.text}>Close Modal</Text>\r\n                  </TouchableHighlight>\r\n               </View>\r\n            </Modal>\r\n            \r\n            <TouchableHighlight onPress = {() => {this.toggleModal(true)}}>\r\n               <Text style = {styles.text}>Open Modal</Text>\r\n            </TouchableHighlight>\r\n         </View>\r\n      )\r\n   }\r\n}\r\nexport default ModalExample\r\n\r\nconst styles = StyleSheet.create ({\r\n   container: {\r\n      alignItems: 'center',\r\n      backgroundColor: '#ede3f2',\r\n      padding: 100\r\n   },\r\n   modal: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      backgroundColor: '#FFF',\r\n      height: 300,\r\n      padding: 100\r\n   },\r\n   text: {\r\n      color: '#3f2949',\r\n      marginTop: 10\r\n   }\r\n})"]},"metadata":{},"sourceType":"module"}